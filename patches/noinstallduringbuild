Description: dont install stuff during build

--- casa-4.2.0.orig/stdcasa/CMakeLists.txt
+++ casa-4.2.0/stdcasa/CMakeLists.txt
@@ -56,9 +56,8 @@ add_custom_command( OUTPUT version.cc
 	COMMAND cat tmp3.txt tmp4.txt > version_tmp.cc
 	|| ${PERL_EXECUTABLE} -e 'unlink("version_tmp.cc")\; exit 1\;'
 	COMMAND ${CMAKE_COMMAND} -E copy_if_different version_tmp.cc version.cc
-	COMMAND mkdir -p ${CMAKE_INSTALL_PREFIX}/../share
-	COMMAND echo '\# casa version file created from casa code cmake' > ${CMAKE_INSTALL_PREFIX}/../share/version.txt
-	COMMAND echo '${CASA_MAJOR_VERSION}.${CASA_MINOR_VERSION}.${CASA_PATCH_VERSION} ${SVNREVISION}' >> ${CMAKE_INSTALL_PREFIX}/../share/version.txt
+    COMMAND echo '\# casa version file created from casa code cmake' > ${CMAKE_BINARY_DIR}/version.txt
+    COMMAND echo '${CASA_MAJOR_VERSION}.${CASA_MINOR_VERSION}.${CASA_PATCH_VERSION} ${SVNREVISION}' >> ${CMAKE_BINARY_DIR}/version.txt
 	DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/version.template
 	DEPENDS definitions
 )
--- casa-4.2.0.orig/CMakeLists.txt
+++ casa-4.2.0/CMakeLists.txt
@@ -73,7 +73,7 @@ if( CMAKE_Fortran_COMPILER STREQUAL CMAK
     message( FATAL_ERROR "Could not find fortran compiler. Please check!" )
 endif()
 
-casa_always_install()
+#casa_always_install()
 
 #
 # Build options
--- casa-4.2.0.orig/install/target.cmake
+++ casa-4.2.0/install/target.cmake
@@ -55,7 +55,7 @@ macro( casa_add_library module )
   add_library( lib${module} ${ARGN} )
   set_target_properties( lib${module} PROPERTIES OUTPUT_NAME ${module} )
 
-  add_dependencies( inst lib${module} )
+  #add_dependencies( inst lib${module} )
   add_custom_target( lib${module}_fast ${CMAKE_BUILD_TOOL} lib${module}/fast )
   add_dependencies( ${module}_fast lib${module}_fast )
 
@@ -77,7 +77,7 @@ macro( casa_add_executable module name )
   set( _sources ${ARGN} )
 
   add_executable( ${name} ${_sources} )
-  add_dependencies( inst ${name} )
+  #add_dependencies( inst ${name} )
   add_custom_target( ${name}_fast ${CMAKE_BUILD_TOOL} ${name}/fast )
   add_dependencies( ${module}_fast ${name}_fast )
 
